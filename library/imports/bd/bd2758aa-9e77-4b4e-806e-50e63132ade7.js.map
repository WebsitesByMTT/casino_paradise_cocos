{"version":3,"sources":["assets/Scripts/ServerCom.js"],"names":["Cookies","require","root","window","cc","Class","Component","properties","loading","type","Node","reconnecting","tracker","errorLable","Label","loginErrorNode","trackerCount","timer","onLoad","ServerCom","checkOrientation","view","on","winSize","width","height","setOrientation","macro","ORIENTATION_LANDSCAPE","ORIENTATION_PORTRAIT","error","console","clearTracker","httpRequest","method","address","data","callback","timeout","inst","xhr","XMLHttpRequest","active","onreadystatechange","K","internetAvailable","readyState","response","responseText","status","undefined","JSON","parse","errorMsg","errorData","log","string","setTimeout","e","onerror","err","ontimeout","disconnectRequestedByPlayer","emit","code","Error","TimeOutError","open","setRequestHeader","token","sys","isBrowser","cookies","document","cookie","split","i","length","trim","startsWith","substring","send","stringify"],"mappings":"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","sourceRoot":"/","sourcesContent":["const Cookies = require('js-cookies');\n// const axios = require('./axios/dist/axios');\n// const axios = require('axios');\n\nvar root = window;\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        loading: {\n            default: null,\n            type: cc.Node,\n        },\n        reconnecting: {\n            default: null,\n            type: cc.Node,\n        },\n        tracker: {\n            default: {},\n        },\n        errorLable:{\n            default: null,\n            type:cc.Label\n        },\n        loginErrorNode:{\n            default: null,\n            type: cc.Node\n        },\n        trackerCount: 0,\n        timer : 0,\n    },\n    // LIFE-CYCLE CALLBACKS:\n    onLoad() {\n        // Created ServerCom Gloabaly so that we can access it anywhere we want\n        root.ServerCom = this;\n        this.checkOrientation();\n        // Add event listener for canvas resize to handle orientation change\n        cc.view.on('canvas-resize', this.checkOrientation, this);\n    },\n    // following function is to check the width and change the orientation(Landscape/Potrait) for mobile or dekstop\n    checkOrientation() {\n        try {\n            let winSize = cc.winSize;\n            // Check if the width is greater than the height to determine orientation\n            if (winSize.width > winSize.height) {\n                cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);\n            } else {\n                cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n            }\n        } catch (error) {\n            console.error(\"Error checking orientation:\", error);\n        }\n    },\n    clearTracker: function(){\n        this.trackerCount = 0;\n        this.tracker = {};\n    },\n\n    /**\n     * @method httpPostRequest\n     * @description HTTP request - POST data \n     * @param {String} address -address of Server \n     * @param {Object} data -Data/PayLoad to be sent\n     * @param {method} callback -Callback to be executed if response.succss is true!\n     * @param {method} error -Callback to be executed if response.success is false!\n     * @param {Number} timeout -value in milli seconds, Specify request timeout time! \n     * @memberof Utilities.ServerCom#\n     */\n\n \n    httpRequest: function (method, address, data, callback, error, timeout) {\n        var inst = this;\n        var xhr = new XMLHttpRequest();\n        xhr.timeout = timeout || 1000;\n        if(!ServerCom.loading.active){\n            ServerCom.loading.active = true;\n        }\n        xhr.onreadystatechange = function () {\n            K.internetAvailable = true;\n            if (xhr.readyState == 4) {\n                ServerCom.loading.active = false;\n                var response = xhr.responseText;\n                if (xhr.status >= 200 && xhr.status < 400) {\n                    if (callback !== null && callback !== undefined) {\n                        var data = JSON.parse(response);\n                            callback(data);\n                    }\n                } else {\n                    var errorMsg = \"Unknown error\";\n                    try {\n                        var errorData = JSON.parse(response);\n                        if (errorData.error) {\n                            errorMsg = errorData.error;\n                        }\n                        console.log(\"errorDataerrorData\", errorData, xhr);\n                        inst.errorLable.string = errorData.error\n                        inst.loginErrorNode.active = true;\n                        setTimeout(() => {\n                            inst.loginErrorNode.active = false;\n                        }, 2000);\n                        // callback(errorData);\n                    } catch (e) {\n                        console.error(\"Error parsing error response:\", e);\n                    }\n                }\n            }\n        };\n    \n        xhr.onerror = function (err) {\n            ServerCom.loading.active = false;\n            K.internetAvailable = false;\n    \n            var errorMsg = \"Unknown error\";\n            try {\n                var errorData = JSON.parse(xhr.responseText);\n                if (errorData.error) {\n                    errorMsg = errorData.error;\n                }\n            } catch (e) {\n                console.error(\"Error parsing error response:\", e);\n            }\n        };\n    \n        xhr.ontimeout = function () {\n            ServerCom.loading.active = false;\n            K.disconnectRequestedByPlayer = false;\n            K.internetAvailable = false;\n            // \n            inst.emit('error', {\n                code: K.Error.TimeOutError,\n                response: \"Timeout \" + address,\n            });\n        };\n        // \n        // xhr.withCredentials = true;\n        xhr.open(method, address, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        let token = null;\n        if (!token && cc.sys.isBrowser) {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                if (cookie.startsWith('token=')) {\n                    token = cookie.substring('token='.length, cookie.length);\n                    break;\n                }\n            }\n        }\n        // If token exists, add it to a custom header\n        if (token) {\n            xhr.setRequestHeader(\"Cookie\", `userToken=${token}`);\n        }\n        if (method === \"POST\") {\n            xhr.send(JSON.stringify(data));\n        } else if (method === \"GET\") {\n            xhr.send();\n        }\n    },\n\n    \n    // WILL use the following code later to check if the same api is request untill we gets its response\n    // /**\n    // updateTracker: function (val, key, showLoading) {\n    //     var incr = val ? +1 : -1;\n    //     this.trackerCount = this.trackerCount + incr;\n    //     var isActive = val && showLoading;\n    //     if(!this.loading.active && showLoading){\n    //         this.loading.active = true; \n    //     }else if(this.loading.active && !showLoading) {\n    //         this.loading.active = false;\n    //     }\n    //     //this.loading.active = val && showLoading;\n    //     this.tracker[key] = val;\n    // },\n\n});"]}