{"version":3,"sources":["assets/Scripts/ServerCom.js"],"names":["root","window","cc","Class","Component","properties","loading","type","Node","reconnecting","tracker","errorLabel","Label","trackerCount","timer","onLoad","ServerCom","checkOrientation","view","on","winSize","width","height","setOrientation","macro","ORIENTATION_LANDSCAPE","ORIENTATION_PORTRAIT","error","console","clearTracker","httpRequest","method","address","data","callback","timeout","inst","xhr","XMLHttpRequest","active","onreadystatechange","K","internetAvailable","readyState","response","responseText","status","undefined","JSON","parse","log","errorMsg","errorData","e","onerror","err","ontimeout","disconnectRequestedByPlayer","emit","code","Error","TimeOutError","open","setRequestHeader","token","sys","localStorage","getItem","send","stringify"],"mappings":"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","sourceRoot":"/","sourcesContent":["var root = window;\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        loading: {\n            default: null,\n            type: cc.Node,\n        },\n        reconnecting: {\n            default: null,\n            type: cc.Node,\n        },\n        tracker: {\n            default: {},\n        },\n        errorLabel:{\n            default: null,\n            type: cc.Label\n        },\n        trackerCount: 0,\n        timer : 0,\n    },\n    // LIFE-CYCLE CALLBACKS:\n    onLoad() {\n        // Created ServerCom Gloabaly so that we can access it anywhere we want\n        root.ServerCom = this;\n        this.checkOrientation();\n        // Add event listener for canvas resize to handle orientation change\n        cc.view.on('canvas-resize', this.checkOrientation, this);\n    },\n    // following function is to check the width and change the orientation(Landscape/Potrait) for mobile or dekstop\n    checkOrientation() {\n        try {\n            let winSize = cc.winSize;\n            // Check if the width is greater than the height to determine orientation\n            if (winSize.width > winSize.height) {\n                cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);\n            } else {\n                cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n            }\n        } catch (error) {\n            console.error(\"Error checking orientation:\", error);\n        }\n    },\n    clearTracker: function(){\n        this.trackerCount = 0;\n        this.tracker = {};\n    },\n\n    /**\n     * @method httpPostRequest\n     * @description HTTP request - POST data \n     * @param {String} address -address of Server \n     * @param {Object} data -Data/PayLoad to be sent\n     * @param {method} callback -Callback to be executed if response.succss is true!\n     * @param {method} error -Callback to be executed if response.success is false!\n     * @param {Number} timeout -value in milli seconds, Specify request timeout time! \n     * @memberof Utilities.ServerCom#\n     */\n    httpRequest: function (method, address, data, callback, error, timeout) {\n        var inst = this;\n        var xhr = new XMLHttpRequest();\n        xhr.timeout = timeout || 1000;\n        if(!ServerCom.loading.active){\n            ServerCom.loading.active = true;\n        }\n        xhr.onreadystatechange = function () {\n            K.internetAvailable = true;\n            if (xhr.readyState == 4) {\n                ServerCom.loading.active = false;\n                var response = xhr.responseText;\n                if (xhr.status >= 200 && xhr.status < 400) {\n                    if (callback !== null && callback !== undefined) {\n                        var data = JSON.parse(response);\n                        console.log(\"fgbfgbfgbfgb\", data, \"and xhr is\", xhr);\n                            callback(data);\n                    }\n                } else {\n                    var errorMsg = \"Unknown error\";\n                    try {\n                        var errorData = JSON.parse(response);\n                        if (errorData.error) {\n                            errorMsg = errorData.error;\n                        }\n                        console.log(\"errorDataerrorData\", errorData, xhr);\n                    } catch (e) {\n                        console.error(\"Error parsing error response:\", e);\n                    }\n                }\n            }\n        };\n    \n        xhr.onerror = function (err) {\n            ServerCom.loading.active = false;\n            K.internetAvailable = false;\n    \n            var errorMsg = \"Unknown error\";\n            try {\n                var errorData = JSON.parse(xhr.responseText);\n                if (errorData.error) {\n                    errorMsg = errorData.error;\n                }\n            } catch (e) {\n                console.error(\"Error parsing error response:\", e);\n            }\n        };\n    \n        xhr.ontimeout = function () {\n            ServerCom.loading.active = false;\n            K.disconnectRequestedByPlayer = false;\n            K.internetAvailable = false;\n            // \n            inst.emit('error', {\n                code: K.Error.TimeOutError,\n                response: \"Timeout \" + address,\n            });\n        };\n        xhr.open(method, address, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        const token = cc.sys.localStorage.getItem(\"token\");\n        if (token) {\n            xhr.setRequestHeader(\"Authorization\", `Bearer ${token}`);\n        }\n        if (method === \"POST\") {\n            xhr.send(JSON.stringify(data));\n        } else if (method === \"GET\") {\n            xhr.send();\n        }\n    },\n    \n    // WILL use the following code later to check if the same api is request untill we gets its response\n    // /**\n    // updateTracker: function (val, key, showLoading) {\n    //     var incr = val ? +1 : -1;\n    //     this.trackerCount = this.trackerCount + incr;\n    //     var isActive = val && showLoading;\n    //     if(!this.loading.active && showLoading){\n    //         this.loading.active = true; \n    //     }else if(this.loading.active && !showLoading) {\n    //         this.loading.active = false;\n    //     }\n    //     //this.loading.active = val && showLoading;\n    //     this.tracker[key] = val;\n    // },\n\n});"]}