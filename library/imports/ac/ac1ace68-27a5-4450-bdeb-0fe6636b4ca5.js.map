{"version":3,"sources":["assets/Scripts/login/Login.js"],"names":["cc","Class","Component","properties","userName","type","EditBox","password","rememberMe","Toggle","lobbyNode","Node","errorLable","Label","loginErrorNode","onLoad","isChecked","logutClick","active","onLoginClick","address","K","ServerAddress","ipAddress","ServerAPI","login","data","username","string","setTimeout","ServerCom","httpRequest","response","token","console","log","randomNumber","Math","floor","random","sys","isBrowser","document","cookie","localStorage","setItem","bind"],"mappings":"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","sourceRoot":"/","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        userName: {\n            default: null,\n            type: cc.EditBox,\n        },\n        password: {\n            default: null,\n            type: cc.EditBox,\n        },\n        rememberMe: {\n            default: null,\n            type: cc.Toggle\n        },\n        lobbyNode:{\n            default: null,\n            type: cc.Node,\n        },\n        errorLable:{\n            default: null,\n            type:cc.Label\n        },\n        loginErrorNode:{\n            default: null,\n            type: cc.Node\n        },\n        \n    \n    },\n    // LIFE-CYCLE CALLBACKS:\n    onLoad () {\n        if(this.rememberMe){\n            this.rememberMe.isChecked = false;\n        }\n       \n    },\n    logutClick(){\n        if(this.lobbyNode.active){\n            this.lobbyNode.active = false;\n        }\n    },\n\n    onLoginClick (){\n        var address = K.ServerAddress.ipAddress + K.ServerAPI.login;\n        var data = {\n            username: this.userName.string,\n            password: this.password.string\n        };\n        if(this.userName.string == \"\" || this.password.string == \"\"){\n            this.errorLable.string = \"Username or Password fields are empty\"\n            this.loginErrorNode.active = true;\n            setTimeout(() => {\n                this.loginErrorNode.active = false;\n            }, 2000);\n            \n            return\n        }\n        ServerCom.httpRequest(\"POST\", address, data, function (response) {\n            if (response.token) {\n                console.log(\"token on login\", response.token);\n                const randomNumber = Math.floor(Math.random() * 10) + 1;\n                if (cc.sys.isBrowser) {\n                    document.cookie = `userToken=${response.token}; path=/;`;\n                    document.cookie = `index = ${randomNumber}`\n                } else {\n                    cc.sys.localStorage.setItem('userToken', response.token);\n                    cc.sys.localStorage.setItem(\"index\", randomNumber); \n                }\n                // Cookies.set(\"index\", randomNumber);\n                setTimeout(function () {\n                    this.lobbyNode.active = true;\n                }.bind(this), 1000);\n            }\n            else{\n                console.log(\"response of user not found on login page\", response);\n            }\n            \n        }.bind(this));\n\n    },\n});"]}