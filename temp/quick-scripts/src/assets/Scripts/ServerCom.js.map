{"version":3,"sources":["assets/Scripts/ServerCom.js"],"names":["root","window","cc","Class","Component","properties","loading","type","Node","reconnecting","tracker","trackerCount","timer","onLoad","ServerCom","checkOrientation","view","on","winSize","width","height","setOrientation","macro","ORIENTATION_LANDSCAPE","ORIENTATION_PORTRAIT","error","console","clearTracker","httpRequest","method","address","data","callback","timeout","inst","xhr","XMLHttpRequest","onreadystatechange","K","internetAvailable","readyState","status","response","responseText","undefined","JSON","parse","log","ok","success","param","code","Error","SuccessFalseError","info","errorType","isRetry","link","isDisplay","emit","isLoading","HttpError","statusText","onerror","err","active","disconnectRequestedByPlayer","ConnectionError","ontimeout","TimeOutError","open","setRequestHeader","send","stringify","updateTracker","val","key","showLoading","incr","isActive"],"mappings":"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","sourceRoot":"/","sourcesContent":["var root = window;\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        loading: {\n            default: null,\n            type: cc.Node,\n        },\n        reconnecting: {\n            default: null,\n            type: cc.Node,\n        },\n        tracker: {\n            default: {},\n        },\n        trackerCount: 0,\n        timer : 0,\n    },\n    // LIFE-CYCLE CALLBACKS:\n    onLoad() {\n        root.ServerCom = this;\n        this.checkOrientation();\n        // Add event listener for canvas resize to handle orientation change\n        cc.view.on('canvas-resize', this.checkOrientation, this);\n    },\n    checkOrientation() {\n        try {\n            let winSize = cc.winSize;\n            // Check if the width is greater than the height to determine orientation\n            if (winSize.width > winSize.height) {\n                cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);\n            } else {\n                cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n            }\n        } catch (error) {\n            console.error(\"Error checking orientation:\", error);\n        }\n    },\n    clearTracker: function(){\n        this.trackerCount = 0;\n        this.tracker = {};\n    },\n\n    /**\n     * @method httpPostRequest\n     * @description HTTP request - POST data \n     * @param {String} address -address of Server \n     * @param {Object} data -Data/PayLoad to be sent\n     * @param {method} callback -Callback to be executed if response.succss is true!\n     * @param {method} error -Callback to be executed if response.success is false!\n     * @param {Number} timeout -value in milli seconds, Specify request timeout time! \n     * @memberof Utilities.ServerCom#\n     */\n    httpRequest: function (method, address, data, callback, error, timeout) {\n        var inst = this;\n        var xhr = new XMLHttpRequest();\n        xhr.timeout = timeout || 1000;\n    \n        // if(!ServerCom.loading.active){\n        //     ServerCom.loading.active = true;\n        // }\n    \n        xhr.onreadystatechange = function () {\n            K.internetAvailable = true;\n            if (xhr.readyState == 4) {\n                // ServerCom.loading.active = false;\n                if (xhr.status >= 200 && xhr.status < 400) {\n                    var response = xhr.responseText;\n                    if (callback !== null && callback !== undefined) {\n                        var data = JSON.parse(response);\n                        console.log(\"https Resuqest\", data.ok);\n                        if (!data.success) {\n                            var param = {\n                                code: K.Error.SuccessFalseError,\n                                response: data.info,\n                                errorType: data.errorType || \"\",\n                                isRetry: (data.isRetry !== undefined && data.isRetry !== null) ? data.isRetry : false,\n                                link: (data.link !== undefined && data.link !== null) ? data.link : false,\n                            };\n                            var isDisplay = (data.isDisplay !== undefined && data.isDisplay !== null) ? data.isDisplay : true;\n                            if (isDisplay) {\n                                inst.emit('error', param);\n                            }\n                            if (error !== null && error !== undefined) {\n                                error(param);\n                            }\n                        } else {\n                            data.isLoading = true;\n                            callback(data);\n                        }\n                    }\n                } else {\n                    inst.emit('error', {\n                        code: K.Error.HttpError,\n                        response: xhr.statusText,\n                    });\n                    if (error !== null && error !== undefined) {\n                        error({\n                            code: K.Error.HttpError,\n                            response: xhr.statusText,\n                        });\n                    }\n                }\n            }\n        };\n    \n        xhr.onerror = function (err) {\n            ServerCom.loading.active = false;\n            K.disconnectRequestedByPlayer = false;\n            K.internetAvailable = false;\n    \n            inst.emit('error', {\n                code: K.Error.ConnectionError,\n                response: err,\n            });\n            if (error !== null && error !== undefined) {\n                error({\n                    code: K.Error.ConnectionError,\n                    response: err,\n                });\n            }\n        };\n    \n        xhr.ontimeout = function () {\n            ServerCom.loading.active = false;\n            K.disconnectRequestedByPlayer = false;\n            K.internetAvailable = false;\n    \n            inst.emit('error', {\n                code: K.Error.TimeOutError,\n                response: \"Timeout \" + address,\n            });\n            if (error !== null && error !== undefined) {\n                error({\n                    code: K.Error.TimeOutError,\n                    response: \"Timeout \" + address,\n                });\n            }\n        };\n    \n        xhr.open(method, address, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    \n        if (method === \"POST\") {\n            xhr.send(JSON.stringify(data));\n        } else if (method === \"GET\") {\n            xhr.send();\n        }\n    \n        // console.log(\"HTTP request \", data, address);\n    },\n    \n    /**\n     * @method updateTracker\n     * @description Maintain and track the record of request and their response!\n     * @param {boolean} val -status of request whether sent or not\n     * @param {String} key - Unique key for each request\n     * @param {boolean} showLoading -sets Loading screen either active or De-Active\n     * @memberof Utilities.ServerCom#\n     */\n    updateTracker: function (val, key, showLoading) {\n        var incr = val ? +1 : -1;\n        this.trackerCount = this.trackerCount + incr;\n\n        var isActive = val && showLoading;\n        if(!this.loading.active && showLoading){\n            this.loading.active = true; \n        }else if(this.loading.active && !showLoading) {\n            this.loading.active = false;\n        }\n        //this.loading.active = val && showLoading;\n        this.tracker[key] = val;\n    },\n\n});"]}